name: env
help: Environment Control application
version: 1.0.0
commands:
  - name: up
    help: similar to docker-compose up, but sets all the required environment
      variables for buildkit. (All docker command options are valid)
    catch_all: true
    flags:
      - long: --attach
        short: -f
        help: By default, the containers are started daemonized, use this to attach to
          their output
  - name: stop
    help: simple alias to docker-compose stop
    catch_all: true
  - name: restart
    help: simple alias to docker-compose stop and docker-compose up
    flags:
      - long: --force
        short: -f
        help: Force the restart of the containers (using docker-compose down)
      - long: --attach
        short: -a
        help: Do not start the new containers deamonized, but attach to their output
  - name: down
    help: simple alias to docker-compose down
    catch_all: true
  - name: clean
    help: removes the existing container image
    flags:
      - long: --yes
        short: -y
        help: Don't ask just do...
  - name: logs
    help: simple alias to docker-compose logs (All docker command options are valid)
    catch_all: true
    args:
      - name: service
        help: Allows you to define which service you want to connect to
  - name: build
    help: builds the docker image for local testing
  - name: rebuild-cli
    help: rebuilds the bashly application you are currently using, based on the
      sources
  - name: ssh
    alias: shell
    help: basically your docker-compose exec into the main app container
    args:
      - name: service
        help: Allows you to define which service you want to connect to
    flags:
      - long: --cmd
        short: -c
        arg: command
        help: By default, we will use the users configured shell, you can use "sh" or
          any other command if you want to
  - name: mysql
    alias: db
    help: a list of database related sub-commands
    commands:
      - name: dump
        help: allows you to DUMP the state of a database onto your harddive
        args:
          - name: type
            help: Defines the database you want to execute the dump for
            default: "@select"
            validate: mysql_addon_isAllowedType
      - name: load
        help: Loads a database dump from your harddrive and replaces all data in the
          main project database table with it.
        args:
          - name: type
            help: Defines the database you want to load the dump for
            default: "@select"
            validate: mysql_addon_isAllowedType
      - name: list
        help: List all available database types to dump/load
  - name: open
    help: opens the current project in your browser.
  - name: composer
    help: runs a certain composer command for the project
    catch_all: true
  - name: artisan
    help: runs a certain artisan command for the project
    catch_all: true
  - name: npm
    help: runs a certain npm command for the project
    catch_all: true
  - name: queue
    help: starts the laravel queue and runs it in the current shell
  - name: websocket
    alias: reverb
    help: starts the laravel websocket server (through reverb) and runs it in the current shell
  - name: dev
    help: starts both the queue and the websocket server in the current shell
  - name: mailhog
    help: starts the interface of the mailhog mailtrap in your browser
